{
  "version": 3,
  "sources": ["../../../src/storage-node/types.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport type { BlobMetadata, BlobMetadataWithId, SliverData } from '../utils/bcs.js';\n\nexport type BlobMetadataWithId = typeof BlobMetadataWithId.$inferType;\n\nexport type SliverType = 'primary' | 'secondary';\n\nexport type SliverData = typeof SliverData.$inferType;\n\nexport type Uploadable = Uint8Array | ArrayBuffer | ReadableStream | Blob;\n\nexport type StorageConfirmation = {\n\tserializedMessage: string;\n\tsignature: string;\n};\n\nexport type GetBlobStatusRequestInput = {\n\tblobId: string;\n};\n\nexport type GetBlobStatusResponse = BlobStatus;\n\nexport type BlobStatus =\n\t| { type: 'nonexistent' }\n\t| ({ type: 'invalid' } & InvalidBlobStatus['invalid'])\n\t| ({ type: 'permanent' } & PermanentBlobStatus['permanent'])\n\t| ({ type: 'deletable' } & DeletableBlobStatus['deletable']);\n\nexport type RawGetBlobStatusResponse = {\n\tcode: number;\n\tsuccess: {\n\t\tdata: RawBlobStatus;\n\t};\n};\n\nexport type RawBlobStatus =\n\t| 'nonexistent'\n\t| InvalidBlobStatus\n\t| PermanentBlobStatus\n\t| DeletableBlobStatus;\n\nexport type InvalidBlobStatus = {\n\tinvalid: {\n\t\tevent: StatusEvent;\n\t};\n};\n\nexport type PermanentBlobStatus = {\n\tpermanent: {\n\t\tdeletableCounts: DeletableCounts;\n\t\tendEpoch: number;\n\t\tisCertified: boolean;\n\t\tstatusEvent: StatusEvent;\n\t\tinitialCertifiedEpoch: number | null;\n\t};\n};\n\nexport type DeletableBlobStatus = {\n\tdeletable: {\n\t\tdeletableCounts: DeletableCounts;\n\t\tinitialCertifiedEpoch: number | null;\n\t};\n};\n\nexport type DeletableCounts = {\n\tcount_deletable_total: number;\n\tcount_deletable_certified: number;\n};\n\nexport type StatusEvent = {\n\teventSeq: string;\n\ttxDigest: string;\n};\n\nexport type GetBlobMetadataRequestInput = {\n\tblobId: string;\n};\n\nexport type GetBlobMetadataResponse = BlobMetadataWithId;\n\nexport type StoreBlobMetadataRequestInput = {\n\tblobId: string;\n\tmetadata: Uploadable | typeof BlobMetadata.$inferInput;\n};\n\nexport type StoreBlobMetadataResponse = {\n\tsuccess: {\n\t\tcode: number;\n\t\tdata: string;\n\t};\n};\n\nexport type GetSliverRequestInput = {\n\tblobId: string;\n\tsliverType: SliverType;\n\tsliverPairIndex: number;\n};\nexport type GetSliverResponse = SliverData;\n\nexport type StoreSliverRequestInput = {\n\tblobId: string;\n\tsliver: Uploadable | typeof SliverData.$inferInput;\n\tsliverType: SliverType;\n\tsliverPairIndex: number;\n};\nexport type StoreSliverResponse = {\n\tsuccess: {\n\t\tcode: number;\n\t\tdata: string;\n\t};\n};\n\nexport type GetDeletableBlobConfirmationRequestInput = {\n\tblobId: string;\n\tobjectId: string;\n};\n\nexport type GetDeletableBlobConfirmationResponse = {\n\tsuccess: {\n\t\tcode: number;\n\t\tdata: {\n\t\t\tsigned: StorageConfirmation;\n\t\t};\n\t};\n};\n\nexport type GetPermanentBlobConfirmationRequestInput = {\n\tblobId: string;\n};\n\nexport type GetPermanentBlobConfirmationResponse = {\n\tsuccess: {\n\t\tcode: number;\n\t\tdata: {\n\t\t\tsigned: StorageConfirmation;\n\t\t};\n\t};\n};\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;",
  "names": []
}
