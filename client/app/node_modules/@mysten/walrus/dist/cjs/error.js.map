{
  "version": 3,
  "sources": ["../../src/error.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nexport class WalrusClientError extends Error {}\n\nexport class RetryableWalrusClientError extends WalrusClientError {}\n\n/** Thrown when the client could not retrieve the status of a blob from any storage node. */\nexport class NoBlobStatusReceivedError extends WalrusClientError {}\n\n/** Thrown when the client could not retrieve a verified blob status for the blob. */\nexport class NoVerifiedBlobStatusReceivedError extends WalrusClientError {}\n\n/** Thrown when the client could not retrieve blob metadata from any storage node. */\nexport class NoBlobMetadataReceivedError extends RetryableWalrusClientError {}\n\n/** Thrown when the client could not retrieve enough slivers to reconstruct the blob. */\nexport class NotEnoughSliversReceivedError extends RetryableWalrusClientError {}\n\n/** Thrown when the client could not write enough slivers to upload the blob. */\nexport class NotEnoughBlobConfirmationsError extends RetryableWalrusClientError {}\n\n/** Thrown when the client is currently behind the current epoch. */\nexport class BehindCurrentEpochError extends RetryableWalrusClientError {}\n\n/** Thrown when a blob is not certified or determined to not exist. */\nexport class BlobNotCertifiedError extends RetryableWalrusClientError {}\n\n/** Thrown when a blob was determined to be incorrectly encoded. */\nexport class InconsistentBlobError extends WalrusClientError {}\n\n/** Thrown when blob is blocked by a quorum of storage nodes. */\nexport class BlobBlockedError extends Error {}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGO,MAAM,0BAA0B,MAAM;AAAC;AAEvC,MAAM,mCAAmC,kBAAkB;AAAC;AAG5D,MAAM,kCAAkC,kBAAkB;AAAC;AAG3D,MAAM,0CAA0C,kBAAkB;AAAC;AAGnE,MAAM,oCAAoC,2BAA2B;AAAC;AAGtE,MAAM,sCAAsC,2BAA2B;AAAC;AAGxE,MAAM,wCAAwC,2BAA2B;AAAC;AAG1E,MAAM,gCAAgC,2BAA2B;AAAC;AAGlE,MAAM,8BAA8B,2BAA2B;AAAC;AAGhE,MAAM,8BAA8B,kBAAkB;AAAC;AAGvD,MAAM,yBAAyB,MAAM;AAAC;",
  "names": []
}
