{
  "version": 3,
  "sources": ["../../../../src/contracts/walrus/event_blob.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n/** Module to certify event blobs. */\n\nimport { MoveStruct } from '../utils/index.js';\nimport { bcs } from '@mysten/sui/bcs';\nimport * as vec_map from './deps/sui/vec_map.js';\nconst $moduleName = '@local-pkg/walrus::event_blob';\nexport const EventBlobAttestation = new MoveStruct({\n\tname: `${$moduleName}::EventBlobAttestation`,\n\tfields: {\n\t\tcheckpoint_sequence_num: bcs.u64(),\n\t\tepoch: bcs.u32(),\n\t},\n});\nexport const EventBlob = new MoveStruct({\n\tname: `${$moduleName}::EventBlob`,\n\tfields: {\n\t\t/** Blob id of the certified event blob. */\n\t\tblob_id: bcs.u256(),\n\t\t/** Ending sui checkpoint of the certified event blob. */\n\t\tending_checkpoint_sequence_number: bcs.u64(),\n\t},\n});\nexport const EventBlobCertificationState = new MoveStruct({\n\tname: `${$moduleName}::EventBlobCertificationState`,\n\tfields: {\n\t\t/** Latest certified event blob. */\n\t\tlatest_certified_blob: bcs.option(EventBlob),\n\t\t/** Current event blob being attested. */\n\t\taggregate_weight_per_blob: vec_map.VecMap(EventBlob, bcs.u16()),\n\t},\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,mBAA2B;AAC3B,iBAAoB;AACpB,cAAyB;AACzB,MAAM,cAAc;AACb,MAAM,uBAAuB,IAAI,wBAAW;AAAA,EAClD,MAAM,GAAG,WAAW;AAAA,EACpB,QAAQ;AAAA,IACP,yBAAyB,eAAI,IAAI;AAAA,IACjC,OAAO,eAAI,IAAI;AAAA,EAChB;AACD,CAAC;AACM,MAAM,YAAY,IAAI,wBAAW;AAAA,EACvC,MAAM,GAAG,WAAW;AAAA,EACpB,QAAQ;AAAA;AAAA,IAEP,SAAS,eAAI,KAAK;AAAA;AAAA,IAElB,mCAAmC,eAAI,IAAI;AAAA,EAC5C;AACD,CAAC;AACM,MAAM,8BAA8B,IAAI,wBAAW;AAAA,EACzD,MAAM,GAAG,WAAW;AAAA,EACpB,QAAQ;AAAA;AAAA,IAEP,uBAAuB,eAAI,OAAO,SAAS;AAAA;AAAA,IAE3C,2BAA2B,QAAQ,OAAO,WAAW,eAAI,IAAI,CAAC;AAAA,EAC/D;AACD,CAAC;",
  "names": []
}
