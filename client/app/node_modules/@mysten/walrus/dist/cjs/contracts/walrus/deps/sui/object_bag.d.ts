/**
 * Similar to `sui::bag`, an `ObjectBag` is a heterogeneous map-like collection.
 * But unlike `sui::bag`, the values bound to these dynamic fields _must_ be
 * objects themselves. This allows for the objects to still exist in storage, which
 * may be important for external tools. The difference is otherwise not observable
 * from within Move.
 */
import { MoveStruct } from '../../../utils/index.js';
export declare const ObjectBag: MoveStruct<{
    /** the ID of this bag */
    id: MoveStruct<{
        id: import("@mysten/sui/bcs").BcsType<string, string | Uint8Array<ArrayBufferLike>, "bytes[32]">;
    }, "0x2::object::UID">;
    /** the number of key-value pairs in the bag */
    size: import("@mysten/sui/bcs").BcsType<string, string | number | bigint, "u64">;
}, "0x2::object_bag::ObjectBag">;
