/**
 * Functions for operating on Move packages from within Move:
 *
 * - Creating proof-of-publish objects from one-time witnesses
 * - Administering package upgrades through upgrade policies.
 */
import { MoveStruct } from '../../../utils/index.js';
export declare const Publisher: MoveStruct<{
    id: MoveStruct<{
        id: import("@mysten/sui/bcs").BcsType<string, string | Uint8Array<ArrayBufferLike>, "bytes[32]">;
    }, "0x2::object::UID">;
    package: import("@mysten/sui/bcs").BcsType<string, string, "string">;
    module_name: import("@mysten/sui/bcs").BcsType<string, string, "string">;
}, "0x2::package::Publisher">;
export declare const UpgradeCap: MoveStruct<{
    id: MoveStruct<{
        id: import("@mysten/sui/bcs").BcsType<string, string | Uint8Array<ArrayBufferLike>, "bytes[32]">;
    }, "0x2::object::UID">;
    /** (Mutable) ID of the package that can be upgraded. */
    package: import("@mysten/sui/bcs").BcsType<string, string | Uint8Array<ArrayBufferLike>, "bytes[32]">;
    /**
     * (Mutable) The number of upgrades that have been applied successively to the
     * original package. Initially 0.
     */
    version: import("@mysten/sui/bcs").BcsType<string, string | number | bigint, "u64">;
    /** What kind of upgrades are allowed. */
    policy: import("@mysten/sui/bcs").BcsType<number, number, "u8">;
}, "0x2::package::UpgradeCap">;
