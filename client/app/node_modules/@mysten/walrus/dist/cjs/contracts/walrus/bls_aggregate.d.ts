import { MoveStruct, MoveEnum } from '../utils/index.js';
export declare const BlsCommitteeMember: MoveStruct<{
    public_key: MoveStruct<{
        bytes: import("@mysten/sui/bcs").BcsType<number[], Iterable<number> & {
            length: number;
        }, string>;
    }, "0x2::group_ops::Element">;
    weight: import("@mysten/sui/bcs").BcsType<number, number, "u16">;
    node_id: import("@mysten/sui/bcs").BcsType<string, string | Uint8Array<ArrayBufferLike>, "bytes[32]">;
}, "@local-pkg/walrus::bls_aggregate::BlsCommitteeMember">;
export declare const BlsCommittee: MoveStruct<{
    /** A vector of committee members */
    members: import("@mysten/sui/bcs").BcsType<{
        public_key: {
            bytes: number[];
        };
        weight: number;
        node_id: string;
    }[], Iterable<{
        public_key: {
            bytes: Iterable<number> & {
                length: number;
            };
        };
        weight: number;
        node_id: string | Uint8Array<ArrayBufferLike>;
    }> & {
        length: number;
    }, string>;
    /** The total number of shards held by the committee */
    n_shards: import("@mysten/sui/bcs").BcsType<number, number, "u16">;
    /** The epoch in which the committee is active. */
    epoch: import("@mysten/sui/bcs").BcsType<number, number, "u32">;
    /** The aggregation of public keys for all members of the committee */
    total_aggregated_key: MoveStruct<{
        bytes: import("@mysten/sui/bcs").BcsType<number[], Iterable<number> & {
            length: number;
        }, string>;
    }, "0x2::group_ops::Element">;
}, "@local-pkg/walrus::bls_aggregate::BlsCommittee">;
/** The type of weight verification to perform. */
export declare const RequiredWeight: MoveEnum<{
    /** Verify that the signers form a quorum. */
    Quorum: null;
    /** Verify that the signers include at least one correct node. */
    OneCorrectNode: null;
}, "@local-pkg/walrus::bls_aggregate::RequiredWeight">;
