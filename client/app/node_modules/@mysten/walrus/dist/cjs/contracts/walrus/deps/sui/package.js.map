{
  "version": 3,
  "sources": ["../../../../../../src/contracts/walrus/deps/sui/package.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * Functions for operating on Move packages from within Move:\n *\n * - Creating proof-of-publish objects from one-time witnesses\n * - Administering package upgrades through upgrade policies.\n */\n\nimport { MoveStruct } from '../../../utils/index.js';\nimport { bcs } from '@mysten/sui/bcs';\nimport * as object from './object.js';\nconst $moduleName = '0x2::package';\nexport const Publisher = new MoveStruct({\n\tname: `${$moduleName}::Publisher`,\n\tfields: {\n\t\tid: object.UID,\n\t\tpackage: bcs.string(),\n\t\tmodule_name: bcs.string(),\n\t},\n});\nexport const UpgradeCap = new MoveStruct({\n\tname: `${$moduleName}::UpgradeCap`,\n\tfields: {\n\t\tid: object.UID,\n\t\t/** (Mutable) ID of the package that can be upgraded. */\n\t\tpackage: bcs.Address,\n\t\t/**\n\t\t * (Mutable) The number of upgrades that have been applied successively to the\n\t\t * original package. Initially 0.\n\t\t */\n\t\tversion: bcs.u64(),\n\t\t/** What kind of upgrades are allowed. */\n\t\tpolicy: bcs.u8(),\n\t},\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,mBAA2B;AAC3B,iBAAoB;AACpB,aAAwB;AACxB,MAAM,cAAc;AACb,MAAM,YAAY,IAAI,wBAAW;AAAA,EACvC,MAAM,GAAG,WAAW;AAAA,EACpB,QAAQ;AAAA,IACP,IAAI,OAAO;AAAA,IACX,SAAS,eAAI,OAAO;AAAA,IACpB,aAAa,eAAI,OAAO;AAAA,EACzB;AACD,CAAC;AACM,MAAM,aAAa,IAAI,wBAAW;AAAA,EACxC,MAAM,GAAG,WAAW;AAAA,EACpB,QAAQ;AAAA,IACP,IAAI,OAAO;AAAA;AAAA,IAEX,SAAS,eAAI;AAAA;AAAA;AAAA;AAAA;AAAA,IAKb,SAAS,eAAI,IAAI;AAAA;AAAA,IAEjB,QAAQ,eAAI,GAAG;AAAA,EAChB;AACD,CAAC;",
  "names": []
}
