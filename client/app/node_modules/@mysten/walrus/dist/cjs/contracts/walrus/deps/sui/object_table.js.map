{
  "version": 3,
  "sources": ["../../../../../../src/contracts/walrus/deps/sui/object_table.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * Similar to `sui::table`, an `ObjectTable<K, V>` is a map-like collection. But\n * unlike `sui::table`, the values bound to these dynamic fields _must_ be objects\n * themselves. This allows for the objects to still exist within in storage, which\n * may be important for external tools. The difference is otherwise not observable\n * from within Move.\n */\n\nimport { MoveStruct } from '../../../utils/index.js';\nimport { bcs } from '@mysten/sui/bcs';\nimport * as object from './object.js';\nconst $moduleName = '0x2::object_table';\nexport const ObjectTable = new MoveStruct({\n\tname: `${$moduleName}::ObjectTable`,\n\tfields: {\n\t\t/** the ID of this table */\n\t\tid: object.UID,\n\t\t/** the number of key-value pairs in the table */\n\t\tsize: bcs.u64(),\n\t},\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,mBAA2B;AAC3B,iBAAoB;AACpB,aAAwB;AACxB,MAAM,cAAc;AACb,MAAM,cAAc,IAAI,wBAAW;AAAA,EACzC,MAAM,GAAG,WAAW;AAAA,EACpB,QAAQ;AAAA;AAAA,IAEP,IAAI,OAAO;AAAA;AAAA,IAEX,MAAM,eAAI,IAAI;AAAA,EACf;AACD,CAAC;",
  "names": []
}
