/** Metadata that describes a Storage Node. Attached to the `StakingPool` */
import { MoveStruct } from '../utils/index.js';
import type { RawTransactionArgument } from '../utils/index.js';
import type { Transaction } from '@mysten/sui/transactions';
export declare const NodeMetadata: MoveStruct<{
    image_url: import("@mysten/sui/bcs").BcsType<string, string, "string">;
    project_url: import("@mysten/sui/bcs").BcsType<string, string, "string">;
    description: import("@mysten/sui/bcs").BcsType<string, string, "string">;
    extra_fields: MoveStruct<{
        contents: import("@mysten/sui/bcs").BcsType<{
            key: string;
            value: string;
        }[], Iterable<{
            key: string;
            value: string;
        }> & {
            length: number;
        }, string>;
    }, "0x2::vec_map::VecMap<string, string>">;
}, "@local-pkg/walrus::node_metadata::NodeMetadata">;
export interface NewArguments {
    imageUrl: RawTransactionArgument<string>;
    projectUrl: RawTransactionArgument<string>;
    description: RawTransactionArgument<string>;
}
export interface NewOptions {
    package?: string;
    arguments: NewArguments | [
        imageUrl: RawTransactionArgument<string>,
        projectUrl: RawTransactionArgument<string>,
        description: RawTransactionArgument<string>
    ];
}
/** Create a new `NodeMetadata` instance */
export declare function _new(options: NewOptions): (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
export interface SetImageUrlArguments {
    metadata: RawTransactionArgument<string>;
    imageUrl: RawTransactionArgument<string>;
}
export interface SetImageUrlOptions {
    package?: string;
    arguments: SetImageUrlArguments | [metadata: RawTransactionArgument<string>, imageUrl: RawTransactionArgument<string>];
}
/** Set the image URL of the Validator. */
export declare function setImageUrl(options: SetImageUrlOptions): (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
export interface SetProjectUrlArguments {
    metadata: RawTransactionArgument<string>;
    projectUrl: RawTransactionArgument<string>;
}
export interface SetProjectUrlOptions {
    package?: string;
    arguments: SetProjectUrlArguments | [metadata: RawTransactionArgument<string>, projectUrl: RawTransactionArgument<string>];
}
/** Set the project URL of the Validator. */
export declare function setProjectUrl(options: SetProjectUrlOptions): (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
export interface SetDescriptionArguments {
    metadata: RawTransactionArgument<string>;
    description: RawTransactionArgument<string>;
}
export interface SetDescriptionOptions {
    package?: string;
    arguments: SetDescriptionArguments | [metadata: RawTransactionArgument<string>, description: RawTransactionArgument<string>];
}
/** Set the description of the Validator. */
export declare function setDescription(options: SetDescriptionOptions): (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
export interface SetExtraFieldsArguments {
    metadata: RawTransactionArgument<string>;
    extraFields: RawTransactionArgument<string>;
}
export interface SetExtraFieldsOptions {
    package?: string;
    arguments: SetExtraFieldsArguments | [metadata: RawTransactionArgument<string>, extraFields: RawTransactionArgument<string>];
}
/** Set an extra field of the Validator. */
export declare function setExtraFields(options: SetExtraFieldsOptions): (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
export interface ImageUrlArguments {
    metadata: RawTransactionArgument<string>;
}
export interface ImageUrlOptions {
    package?: string;
    arguments: ImageUrlArguments | [metadata: RawTransactionArgument<string>];
}
/** Returns the image URL of the Validator. */
export declare function imageUrl(options: ImageUrlOptions): (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
export interface ProjectUrlArguments {
    metadata: RawTransactionArgument<string>;
}
export interface ProjectUrlOptions {
    package?: string;
    arguments: ProjectUrlArguments | [metadata: RawTransactionArgument<string>];
}
/** Returns the project URL of the Validator. */
export declare function projectUrl(options: ProjectUrlOptions): (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
export interface DescriptionArguments {
    metadata: RawTransactionArgument<string>;
}
export interface DescriptionOptions {
    package?: string;
    arguments: DescriptionArguments | [metadata: RawTransactionArgument<string>];
}
/** Returns the description of the Validator. */
export declare function description(options: DescriptionOptions): (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
export interface ExtraFieldsArguments {
    metadata: RawTransactionArgument<string>;
}
export interface ExtraFieldsOptions {
    package?: string;
    arguments: ExtraFieldsArguments | [metadata: RawTransactionArgument<string>];
}
/** Returns the extra fields of the Validator. */
export declare function extraFields(options: ExtraFieldsOptions): (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
