"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var epoch_parameters_exports = {};
__export(epoch_parameters_exports, {
  EpochParams: () => EpochParams
});
module.exports = __toCommonJS(epoch_parameters_exports);
var import_utils = require("../utils/index.js");
var import_bcs = require("@mysten/sui/bcs");
const $moduleName = "@local-pkg/walrus::epoch_parameters";
const EpochParams = new import_utils.MoveStruct({
  name: `${$moduleName}::EpochParams`,
  fields: {
    /** The storage capacity of the system. */
    total_capacity_size: import_bcs.bcs.u64(),
    /** The price per unit size of storage. */
    storage_price_per_unit_size: import_bcs.bcs.u64(),
    /** The write price per unit size. */
    write_price_per_unit_size: import_bcs.bcs.u64()
  }
});
//# sourceMappingURL=epoch_parameters.js.map
