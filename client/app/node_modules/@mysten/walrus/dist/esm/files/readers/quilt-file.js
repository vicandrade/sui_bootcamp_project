var __typeError = (msg) => {
  throw TypeError(msg);
};
var __accessCheck = (obj, member, msg) => member.has(obj) || __typeError("Cannot " + msg);
var __privateGet = (obj, member, getter) => (__accessCheck(obj, member, "read from private field"), getter ? getter.call(obj) : member.get(obj));
var __privateAdd = (obj, member, value) => member.has(obj) ? __typeError("Cannot add the same private member more than once") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);
var __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, "write to private field"), setter ? setter.call(obj, value) : member.set(obj, value), value);
var _quilt, _sliverIndex, _identifier, _tags;
class QuiltFileReader {
  constructor({
    quilt,
    sliverIndex,
    identifier,
    tags
  }) {
    __privateAdd(this, _quilt);
    __privateAdd(this, _sliverIndex);
    __privateAdd(this, _identifier);
    __privateAdd(this, _tags);
    __privateSet(this, _quilt, quilt);
    __privateSet(this, _sliverIndex, sliverIndex);
    __privateSet(this, _identifier, identifier ?? null);
    __privateSet(this, _tags, tags);
  }
  async getBytes() {
    const { blobContents, identifier, tags } = await __privateGet(this, _quilt).readBlob(__privateGet(this, _sliverIndex));
    __privateSet(this, _identifier, identifier);
    __privateSet(this, _tags, tags ?? {});
    return blobContents;
  }
  async getIdentifier() {
    if (__privateGet(this, _identifier) !== null) {
      return __privateGet(this, _identifier);
    }
    const header = await __privateGet(this, _quilt).getBlobHeader(__privateGet(this, _sliverIndex));
    __privateSet(this, _identifier, header.identifier);
    return __privateGet(this, _identifier);
  }
  async getTags() {
    if (__privateGet(this, _tags) !== void 0) {
      return __privateGet(this, _tags);
    }
    const header = await __privateGet(this, _quilt).getBlobHeader(__privateGet(this, _sliverIndex));
    __privateSet(this, _tags, header.tags ?? {});
    return __privateGet(this, _tags);
  }
}
_quilt = new WeakMap();
_sliverIndex = new WeakMap();
_identifier = new WeakMap();
_tags = new WeakMap();
export {
  QuiltFileReader
};
//# sourceMappingURL=quilt-file.js.map
