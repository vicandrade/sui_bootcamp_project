{
  "version": 3,
  "sources": ["../../../src/files/file.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport { LocalReader } from './readers/local.js';\n\nexport interface FileReader {\n\tgetIdentifier(): Promise<string | null>;\n\tgetTags(): Promise<Record<string, string>>;\n\tgetBytes(): Promise<Uint8Array>;\n}\n\nexport class WalrusFile {\n\t#reader: FileReader;\n\n\tstatic from(options: {\n\t\tcontents: Uint8Array | Blob;\n\t\tidentifier: string;\n\t\ttags?: Record<string, string>;\n\t}) {\n\t\treturn new WalrusFile({\n\t\t\treader: new LocalReader(options),\n\t\t});\n\t}\n\n\tconstructor({ reader }: { reader: FileReader }) {\n\t\tthis.#reader = reader;\n\t}\n\n\tgetIdentifier() {\n\t\treturn this.#reader.getIdentifier();\n\t}\n\tgetTags() {\n\t\treturn this.#reader.getTags();\n\t}\n\n\tbytes() {\n\t\treturn this.#reader.getBytes();\n\t}\n\n\tasync text() {\n\t\tconst bytes = await this.bytes();\n\n\t\treturn new TextDecoder().decode(bytes);\n\t}\n\n\tasync json() {\n\t\treturn JSON.parse(await this.text());\n\t}\n}\n"],
  "mappings": ";;;;;;;AAAA;AAGA,SAAS,mBAAmB;AAQrB,MAAM,cAAN,MAAM,YAAW;AAAA,EAavB,YAAY,EAAE,OAAO,GAA2B;AAZhD;AAaC,uBAAK,SAAU;AAAA,EAChB;AAAA,EAZA,OAAO,KAAK,SAIT;AACF,WAAO,IAAI,YAAW;AAAA,MACrB,QAAQ,IAAI,YAAY,OAAO;AAAA,IAChC,CAAC;AAAA,EACF;AAAA,EAMA,gBAAgB;AACf,WAAO,mBAAK,SAAQ,cAAc;AAAA,EACnC;AAAA,EACA,UAAU;AACT,WAAO,mBAAK,SAAQ,QAAQ;AAAA,EAC7B;AAAA,EAEA,QAAQ;AACP,WAAO,mBAAK,SAAQ,SAAS;AAAA,EAC9B;AAAA,EAEA,MAAM,OAAO;AACZ,UAAM,QAAQ,MAAM,KAAK,MAAM;AAE/B,WAAO,IAAI,YAAY,EAAE,OAAO,KAAK;AAAA,EACtC;AAAA,EAEA,MAAM,OAAO;AACZ,WAAO,KAAK,MAAM,MAAM,KAAK,KAAK,CAAC;AAAA,EACpC;AACD;AApCC;AADM,IAAM,aAAN;",
  "names": []
}
