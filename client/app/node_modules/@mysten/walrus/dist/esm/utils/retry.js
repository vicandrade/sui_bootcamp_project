async function retry(fn, options) {
  let remaining = options.count ?? 3;
  while (remaining > 0) {
    try {
      remaining -= 1;
      return await fn();
    } catch (error) {
      if (remaining <= 0 || options.condition && !options.condition(error)) {
        throw error;
      }
      if (options.delay) {
        await new Promise(
          (resolve) => setTimeout(
            resolve,
            (options.delay ?? 1e3) + (options.jitter ? Math.random() * options.jitter : 0)
          )
        );
      }
    }
  }
  throw new Error("Retry count exceeded");
}
export {
  retry
};
//# sourceMappingURL=retry.js.map
