/**
 * Contains an active set of storage nodes. The active set is a smart collection
 * that only stores up to 1000 nodes. The active set tracks the total amount of
 * staked WAL to make the calculation of the rewards and voting power distribution
 * easier.
 */
import { MoveStruct } from '../utils/index.js';
export declare const ActiveSetEntry: MoveStruct<{
    node_id: import("@mysten/sui/bcs").BcsType<string, string | Uint8Array<ArrayBufferLike>, "bytes[32]">;
    staked_amount: import("@mysten/sui/bcs").BcsType<string, string | number | bigint, "u64">;
}, "@local-pkg/walrus::active_set::ActiveSetEntry">;
export declare const ActiveSet: MoveStruct<{
    /**
     * The maximum number of storage nodes in the active set. Potentially remove this
     * field.
     */
    max_size: import("@mysten/sui/bcs").BcsType<number, number, "u16">;
    /**
     * The minimum amount of staked WAL needed to enter the active set. This is used to
     * determine if a storage node can be added to the active set.
     */
    threshold_stake: import("@mysten/sui/bcs").BcsType<string, string | number | bigint, "u64">;
    /** The list of storage nodes in the active set and their stake. */
    nodes: import("@mysten/sui/bcs").BcsType<{
        node_id: string;
        staked_amount: string;
    }[], Iterable<{
        node_id: string | Uint8Array<ArrayBufferLike>;
        staked_amount: string | number | bigint;
    }> & {
        length: number;
    }, string>;
    /** The total amount of staked WAL in the active set. */
    total_stake: import("@mysten/sui/bcs").BcsType<string, string | number | bigint, "u64">;
}, "@local-pkg/walrus::active_set::ActiveSet">;
