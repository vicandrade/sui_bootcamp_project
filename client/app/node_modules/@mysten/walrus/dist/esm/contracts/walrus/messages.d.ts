import { MoveStruct, MoveEnum } from '../utils/index.js';
export declare const ProofOfPossessionMessage: MoveStruct<{
    intent_type: import("@mysten/sui/bcs").BcsType<number, number, "u8">;
    intent_version: import("@mysten/sui/bcs").BcsType<number, number, "u8">;
    intent_app: import("@mysten/sui/bcs").BcsType<number, number, "u8">;
    epoch: import("@mysten/sui/bcs").BcsType<number, number, "u32">;
    sui_address: import("@mysten/sui/bcs").BcsType<string, string | Uint8Array<ArrayBufferLike>, "bytes[32]">;
    bls_key: import("@mysten/sui/bcs").BcsType<number[], Iterable<number> & {
        length: number;
    }, string>;
}, "@local-pkg/walrus::messages::ProofOfPossessionMessage">;
export declare const CertifiedMessage: MoveStruct<{
    intent_type: import("@mysten/sui/bcs").BcsType<number, number, "u8">;
    intent_version: import("@mysten/sui/bcs").BcsType<number, number, "u8">;
    cert_epoch: import("@mysten/sui/bcs").BcsType<number, number, "u32">;
    message: import("@mysten/sui/bcs").BcsType<number[], Iterable<number> & {
        length: number;
    }, string>;
    stake_support: import("@mysten/sui/bcs").BcsType<number, number, "u16">;
}, "@local-pkg/walrus::messages::CertifiedMessage">;
/** The persistence type of a blob. Used for storage confirmation. */
export declare const BlobPersistenceType: MoveEnum<{
    Permanent: null;
    Deletable: MoveStruct<{
        object_id: import("@mysten/sui/bcs").BcsType<string, string | Uint8Array<ArrayBufferLike>, "bytes[32]">;
    }, "BlobPersistenceType.Deletable">;
}, "@local-pkg/walrus::messages::BlobPersistenceType">;
export declare const CertifiedBlobMessage: MoveStruct<{
    blob_id: import("@mysten/sui/bcs").BcsType<string, string | number | bigint, "u256">;
    blob_persistence_type: MoveEnum<{
        Permanent: null;
        Deletable: MoveStruct<{
            object_id: import("@mysten/sui/bcs").BcsType<string, string | Uint8Array<ArrayBufferLike>, "bytes[32]">;
        }, "BlobPersistenceType.Deletable">;
    }, "@local-pkg/walrus::messages::BlobPersistenceType">;
}, "@local-pkg/walrus::messages::CertifiedBlobMessage">;
export declare const CertifiedInvalidBlobId: MoveStruct<{
    blob_id: import("@mysten/sui/bcs").BcsType<string, string | number | bigint, "u256">;
}, "@local-pkg/walrus::messages::CertifiedInvalidBlobId">;
export declare const ProtocolVersionMessage: MoveStruct<{
    start_epoch: import("@mysten/sui/bcs").BcsType<number, number, "u32">;
    protocol_version: import("@mysten/sui/bcs").BcsType<string, string | number | bigint, "u64">;
}, "@local-pkg/walrus::messages::ProtocolVersionMessage">;
export declare const DenyListUpdateMessage: MoveStruct<{
    storage_node_id: import("@mysten/sui/bcs").BcsType<string, string | Uint8Array<ArrayBufferLike>, "bytes[32]">;
    deny_list_sequence_number: import("@mysten/sui/bcs").BcsType<string, string | number | bigint, "u64">;
    deny_list_size: import("@mysten/sui/bcs").BcsType<string, string | number | bigint, "u64">;
    deny_list_root: import("@mysten/sui/bcs").BcsType<string, string | number | bigint, "u256">;
}, "@local-pkg/walrus::messages::DenyListUpdateMessage">;
export declare const DenyListBlobDeleted: MoveStruct<{
    blob_id: import("@mysten/sui/bcs").BcsType<string, string | number | bigint, "u256">;
}, "@local-pkg/walrus::messages::DenyListBlobDeleted">;
