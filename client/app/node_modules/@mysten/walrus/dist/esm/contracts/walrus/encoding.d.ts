import type { Transaction } from '@mysten/sui/transactions';
import type { RawTransactionArgument } from '../utils/index.js';
export interface EncodedBlobLengthArguments {
    unencodedLength: RawTransactionArgument<number | bigint>;
    encodingType: RawTransactionArgument<number>;
    nShards: RawTransactionArgument<number>;
}
export interface EncodedBlobLengthOptions {
    package?: string;
    arguments: EncodedBlobLengthArguments | [
        unencodedLength: RawTransactionArgument<number | bigint>,
        encodingType: RawTransactionArgument<number>,
        nShards: RawTransactionArgument<number>
    ];
}
/**
 * Computes the encoded length of a blob given its unencoded length, encoding type
 * and number of shards `n_shards`.
 */
export declare function encodedBlobLength(options: EncodedBlobLengthOptions): (tx: Transaction) => import("@mysten/sui/transactions").TransactionResult;
