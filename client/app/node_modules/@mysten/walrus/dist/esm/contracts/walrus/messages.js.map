{
  "version": 3,
  "sources": ["../../../../src/contracts/walrus/messages.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\nimport { MoveStruct, MoveEnum } from '../utils/index.js';\nimport { bcs } from '@mysten/sui/bcs';\nconst $moduleName = '@local-pkg/walrus::messages';\nexport const ProofOfPossessionMessage = new MoveStruct({\n\tname: `${$moduleName}::ProofOfPossessionMessage`,\n\tfields: {\n\t\tintent_type: bcs.u8(),\n\t\tintent_version: bcs.u8(),\n\t\tintent_app: bcs.u8(),\n\t\tepoch: bcs.u32(),\n\t\tsui_address: bcs.Address,\n\t\tbls_key: bcs.vector(bcs.u8()),\n\t},\n});\nexport const CertifiedMessage = new MoveStruct({\n\tname: `${$moduleName}::CertifiedMessage`,\n\tfields: {\n\t\tintent_type: bcs.u8(),\n\t\tintent_version: bcs.u8(),\n\t\tcert_epoch: bcs.u32(),\n\t\tmessage: bcs.vector(bcs.u8()),\n\t\tstake_support: bcs.u16(),\n\t},\n});\n/** The persistence type of a blob. Used for storage confirmation. */\nexport const BlobPersistenceType = new MoveEnum({\n\tname: `${$moduleName}::BlobPersistenceType`,\n\tfields: {\n\t\tPermanent: null,\n\t\tDeletable: new MoveStruct({\n\t\t\tname: `BlobPersistenceType.Deletable`,\n\t\t\tfields: {\n\t\t\t\tobject_id: bcs.Address,\n\t\t\t},\n\t\t}),\n\t},\n});\nexport const CertifiedBlobMessage = new MoveStruct({\n\tname: `${$moduleName}::CertifiedBlobMessage`,\n\tfields: {\n\t\tblob_id: bcs.u256(),\n\t\tblob_persistence_type: BlobPersistenceType,\n\t},\n});\nexport const CertifiedInvalidBlobId = new MoveStruct({\n\tname: `${$moduleName}::CertifiedInvalidBlobId`,\n\tfields: {\n\t\tblob_id: bcs.u256(),\n\t},\n});\nexport const ProtocolVersionMessage = new MoveStruct({\n\tname: `${$moduleName}::ProtocolVersionMessage`,\n\tfields: {\n\t\tstart_epoch: bcs.u32(),\n\t\tprotocol_version: bcs.u64(),\n\t},\n});\nexport const DenyListUpdateMessage = new MoveStruct({\n\tname: `${$moduleName}::DenyListUpdateMessage`,\n\tfields: {\n\t\tstorage_node_id: bcs.Address,\n\t\tdeny_list_sequence_number: bcs.u64(),\n\t\tdeny_list_size: bcs.u64(),\n\t\tdeny_list_root: bcs.u256(),\n\t},\n});\nexport const DenyListBlobDeleted = new MoveStruct({\n\tname: `${$moduleName}::DenyListBlobDeleted`,\n\tfields: {\n\t\tblob_id: bcs.u256(),\n\t},\n});\n"],
  "mappings": "AAEA,SAAS,YAAY,gBAAgB;AACrC,SAAS,WAAW;AACpB,MAAM,cAAc;AACb,MAAM,2BAA2B,IAAI,WAAW;AAAA,EACtD,MAAM,GAAG,WAAW;AAAA,EACpB,QAAQ;AAAA,IACP,aAAa,IAAI,GAAG;AAAA,IACpB,gBAAgB,IAAI,GAAG;AAAA,IACvB,YAAY,IAAI,GAAG;AAAA,IACnB,OAAO,IAAI,IAAI;AAAA,IACf,aAAa,IAAI;AAAA,IACjB,SAAS,IAAI,OAAO,IAAI,GAAG,CAAC;AAAA,EAC7B;AACD,CAAC;AACM,MAAM,mBAAmB,IAAI,WAAW;AAAA,EAC9C,MAAM,GAAG,WAAW;AAAA,EACpB,QAAQ;AAAA,IACP,aAAa,IAAI,GAAG;AAAA,IACpB,gBAAgB,IAAI,GAAG;AAAA,IACvB,YAAY,IAAI,IAAI;AAAA,IACpB,SAAS,IAAI,OAAO,IAAI,GAAG,CAAC;AAAA,IAC5B,eAAe,IAAI,IAAI;AAAA,EACxB;AACD,CAAC;AAEM,MAAM,sBAAsB,IAAI,SAAS;AAAA,EAC/C,MAAM,GAAG,WAAW;AAAA,EACpB,QAAQ;AAAA,IACP,WAAW;AAAA,IACX,WAAW,IAAI,WAAW;AAAA,MACzB,MAAM;AAAA,MACN,QAAQ;AAAA,QACP,WAAW,IAAI;AAAA,MAChB;AAAA,IACD,CAAC;AAAA,EACF;AACD,CAAC;AACM,MAAM,uBAAuB,IAAI,WAAW;AAAA,EAClD,MAAM,GAAG,WAAW;AAAA,EACpB,QAAQ;AAAA,IACP,SAAS,IAAI,KAAK;AAAA,IAClB,uBAAuB;AAAA,EACxB;AACD,CAAC;AACM,MAAM,yBAAyB,IAAI,WAAW;AAAA,EACpD,MAAM,GAAG,WAAW;AAAA,EACpB,QAAQ;AAAA,IACP,SAAS,IAAI,KAAK;AAAA,EACnB;AACD,CAAC;AACM,MAAM,yBAAyB,IAAI,WAAW;AAAA,EACpD,MAAM,GAAG,WAAW;AAAA,EACpB,QAAQ;AAAA,IACP,aAAa,IAAI,IAAI;AAAA,IACrB,kBAAkB,IAAI,IAAI;AAAA,EAC3B;AACD,CAAC;AACM,MAAM,wBAAwB,IAAI,WAAW;AAAA,EACnD,MAAM,GAAG,WAAW;AAAA,EACpB,QAAQ;AAAA,IACP,iBAAiB,IAAI;AAAA,IACrB,2BAA2B,IAAI,IAAI;AAAA,IACnC,gBAAgB,IAAI,IAAI;AAAA,IACxB,gBAAgB,IAAI,KAAK;AAAA,EAC1B;AACD,CAAC;AACM,MAAM,sBAAsB,IAAI,WAAW;AAAA,EACjD,MAAM,GAAG,WAAW;AAAA,EACpB,QAAQ;AAAA,IACP,SAAS,IAAI,KAAK;AAAA,EACnB;AACD,CAAC;",
  "names": []
}
