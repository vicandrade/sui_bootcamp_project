{
  "version": 3,
  "sources": ["../../../../src/contracts/walrus/active_set.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * Contains an active set of storage nodes. The active set is a smart collection\n * that only stores up to 1000 nodes. The active set tracks the total amount of\n * staked WAL to make the calculation of the rewards and voting power distribution\n * easier.\n */\n\nimport { MoveStruct } from '../utils/index.js';\nimport { bcs } from '@mysten/sui/bcs';\nconst $moduleName = '@local-pkg/walrus::active_set';\nexport const ActiveSetEntry = new MoveStruct({\n\tname: `${$moduleName}::ActiveSetEntry`,\n\tfields: {\n\t\tnode_id: bcs.Address,\n\t\tstaked_amount: bcs.u64(),\n\t},\n});\nexport const ActiveSet = new MoveStruct({\n\tname: `${$moduleName}::ActiveSet`,\n\tfields: {\n\t\t/**\n\t\t * The maximum number of storage nodes in the active set. Potentially remove this\n\t\t * field.\n\t\t */\n\t\tmax_size: bcs.u16(),\n\t\t/**\n\t\t * The minimum amount of staked WAL needed to enter the active set. This is used to\n\t\t * determine if a storage node can be added to the active set.\n\t\t */\n\t\tthreshold_stake: bcs.u64(),\n\t\t/** The list of storage nodes in the active set and their stake. */\n\t\tnodes: bcs.vector(ActiveSetEntry),\n\t\t/** The total amount of staked WAL in the active set. */\n\t\ttotal_stake: bcs.u64(),\n\t},\n});\n"],
  "mappings": "AAUA,SAAS,kBAAkB;AAC3B,SAAS,WAAW;AACpB,MAAM,cAAc;AACb,MAAM,iBAAiB,IAAI,WAAW;AAAA,EAC5C,MAAM,GAAG,WAAW;AAAA,EACpB,QAAQ;AAAA,IACP,SAAS,IAAI;AAAA,IACb,eAAe,IAAI,IAAI;AAAA,EACxB;AACD,CAAC;AACM,MAAM,YAAY,IAAI,WAAW;AAAA,EACvC,MAAM,GAAG,WAAW;AAAA,EACpB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,IAKP,UAAU,IAAI,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,IAKlB,iBAAiB,IAAI,IAAI;AAAA;AAAA,IAEzB,OAAO,IAAI,OAAO,cAAc;AAAA;AAAA,IAEhC,aAAa,IAAI,IAAI;AAAA,EACtB;AACD,CAAC;",
  "names": []
}
