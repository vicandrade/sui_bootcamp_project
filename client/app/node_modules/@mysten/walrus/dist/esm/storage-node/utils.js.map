{
  "version": 3,
  "sources": ["../../../src/storage-node/utils.ts"],
  "sourcesContent": ["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nexport type HeadersLike = Record<string, string | string[] | undefined> | RequestInit['headers'];\n\nexport function mergeHeaders(...headers: (HeadersLike | undefined)[]): Headers {\n\tconst mergedHeaders = new Headers();\n\n\tfor (const header of headers) {\n\t\tif (!header || typeof header !== 'object') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor (const [key, value] of Object.entries(header)) {\n\t\t\tif (value === null) {\n\t\t\t\tmergedHeaders.delete(key);\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\tfor (const v of value) {\n\t\t\t\t\tmergedHeaders.append(key, v as string);\n\t\t\t\t}\n\t\t\t} else if (value !== undefined) {\n\t\t\t\tmergedHeaders.set(key, value);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn mergedHeaders;\n}\n"],
  "mappings": "AAKO,SAAS,gBAAgB,SAA+C;AAC9E,QAAM,gBAAgB,IAAI,QAAQ;AAElC,aAAW,UAAU,SAAS;AAC7B,QAAI,CAAC,UAAU,OAAO,WAAW,UAAU;AAC1C;AAAA,IACD;AAEA,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,MAAM,GAAG;AAClD,UAAI,UAAU,MAAM;AACnB,sBAAc,OAAO,GAAG;AAAA,MACzB,WAAW,MAAM,QAAQ,KAAK,GAAG;AAChC,mBAAW,KAAK,OAAO;AACtB,wBAAc,OAAO,KAAK,CAAW;AAAA,QACtC;AAAA,MACD,WAAW,UAAU,QAAW;AAC/B,sBAAc,IAAI,KAAK,KAAK;AAAA,MAC7B;AAAA,IACD;AAAA,EACD;AAEA,SAAO;AACR;",
  "names": []
}
